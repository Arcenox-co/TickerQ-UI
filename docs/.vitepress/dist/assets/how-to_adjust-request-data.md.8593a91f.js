import{_ as s,o as a,c as e,X as o}from"./chunks/framework.6e839c56.js";const F=JSON.parse('{"title":"Adjust Stored Request Data","description":"","frontmatter":{},"headers":[],"relativePath":"how-to/adjust-request-data.md","filePath":"how-to/adjust-request-data.md"}'),n={name:"how-to/adjust-request-data.md"},l=o(`<h1 id="adjust-stored-request-data" tabindex="-1">Adjust Stored Request Data <a class="header-anchor" href="#adjust-stored-request-data" aria-label="Permalink to &quot;Adjust Stored Request Data&quot;">​</a></h1><div class="danger custom-block" style="padding-top:8px;"><p>This feature is available exclusively through the extension package: TickerQ.EntityFrameworkCore.</p></div><h2 id="adjust-store-retrieve-data" tabindex="-1">Adjust <code>Store/Retrieve</code> data <a class="header-anchor" href="#adjust-store-retrieve-data" aria-label="Permalink to &quot;Adjust \`Store/Retrieve\` data&quot;">​</a></h2><ul><li>Current:</li></ul><blockquote><p>When we stored the request we used the helper: <a href="/examples/in-database-example.html#storing-jobs-in-database">Storing jobs in database</a> <code>code-line 3</code>:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight has-focused-lines"><code><span class="line has-focus"><span style="color:#A6ACCD;">Request </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TickerHelper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateTickerRequest</span><span style="color:#89DDFF;">&lt;string&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span></code></pre></div><div class="tip custom-block" style="padding-top:8px;"><code>CreateTickerRequest</code> compresses the data into <code>GZip</code> and stores in database as <code>ByteArray</code>. </div></blockquote><ul><li>Update:</li></ul><blockquote><p>Once you decide against using <code>TickerHelper</code> for data storage and opt to create your own mechanism, you must also override the data retrieval method.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight has-focused-lines"><code><span class="line has-focus"><span style="color:#A6ACCD;">Request </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//your code </span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Override the retrieving request.</p><p>Override the method <code>GetRequestValueAsync</code> of <code>TickerController</code> in your class:</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyFirstExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TickerController</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">TickerFunction</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FunctionName: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ExampleTicker</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ExampleTicker</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TickerFunctionContext</span><span style="color:#89DDFF;">&lt;string&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tickerContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">cancellationToken</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> tickerContext</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Outputs GetRequestValueAsync...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">override</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetRequestValueAsync</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#FFCB6B;">Guid</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tickerId</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TickerType</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tickerType</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">// retrieve stored request data code... </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div></blockquote>`,7),t=[l];function p(c,r,i,y,d,C){return a(),e("div",null,t)}const u=s(n,[["render",p]]);export{F as __pageData,u as default};
