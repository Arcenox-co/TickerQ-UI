import{_ as s,o as a,c as o,X as n}from"./chunks/framework.6e839c56.js";const C=JSON.parse('{"title":"In-Memory Background Job","description":"","frontmatter":{},"headers":[],"relativePath":"examples/in-memory-example.md","filePath":"examples/in-memory-example.md"}'),e={name:"examples/in-memory-example.md"},l=n(`<h1 id="in-memory-background-job" tabindex="-1">In-Memory Background Job <a class="header-anchor" href="#in-memory-background-job" aria-label="Permalink to &quot;In-Memory Background Job&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Note</p><p>In case of using the extension package <code>TickerQ.EntityFrameworkCore</code> you can skip this part and jump to the <a href="./in-database-example#example">In-Database Background Job</a> example.</p></div><h2 id="initial-setup" tabindex="-1">Initial Setup <a class="header-anchor" href="#initial-setup" aria-label="Permalink to &quot;Initial Setup&quot;">​</a></h2><p>To set up a background job that runs periodically, follow these steps:</p><ol><li>Create a Public Instance Class</li><li>Inherit from <code>TickerController</code></li><li>Annotate with <code>TickerFunction</code> Attribute <ul><li>This attribute requires two parameters: <strong>FunctionName</strong> and <strong>CronExpression</strong>.</li></ul></li></ol><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>Here&#39;s a simple example of a background job that will execute every 5 minutes. Not familiar with <code>Cron Expressions</code>? check out this <a target="_blank" href="https://crontab.cronhub.io/">Cronhub Tool</a>.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyFirstExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TickerController</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">TickerFunction</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FunctionName: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ExampleCronTicker</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> CronExpression: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*/5 * * * *</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ExampleCronTicker</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Your background job logic goes here...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="cron-expression-mapping" tabindex="-1">Cron Expression Mapping <a class="header-anchor" href="#cron-expression-mapping" aria-label="Permalink to &quot;Cron Expression Mapping&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Map <code>cron expression</code> with the <code>IConfiguration</code> using <code>%</code>:</p><blockquote><p>Update the attribute: <code>TickerFunction</code></p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">TickerFunction</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">nameof</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">..., CronExpression: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%CronTicker:EveryMinute%</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">]</span></span></code></pre></div></blockquote><blockquote><p>Define the cron expression to the <code>Appsettings.json</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CronTicker</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">EveryMinute</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">* * * * *</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div></blockquote></div>`,10),p=[l];function t(c,r,i,D,y,F){return a(),o("div",null,p)}const d=s(e,[["render",t]]);export{C as __pageData,d as default};
