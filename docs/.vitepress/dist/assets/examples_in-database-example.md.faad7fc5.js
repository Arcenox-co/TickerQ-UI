import{_ as s,o as a,c as n,X as e}from"./chunks/framework.6e839c56.js";const d=JSON.parse('{"title":"In-Memory Background Job","description":"","frontmatter":{},"headers":[],"relativePath":"examples/in-database-example.md","filePath":"examples/in-database-example.md"}'),l={name:"examples/in-database-example.md"},o=e(`<h1 id="in-memory-background-job" tabindex="-1">In-Memory Background Job <a class="header-anchor" href="#in-memory-background-job" aria-label="Permalink to &quot;In-Memory Background Job&quot;">​</a></h1><h2 id="initial-setup" tabindex="-1">Initial Setup <a class="header-anchor" href="#initial-setup" aria-label="Permalink to &quot;Initial Setup&quot;">​</a></h2><p>To set up a background job that runs periodically, follow these steps:</p><ol><li>Create a Public Instance Class</li><li>Inherit from <code>TickerController</code></li><li>Annotate with <code>TickerFunction</code> Attribute <ul><li>This attribute requires a parameters: <strong>FunctionName</strong>.</li></ul></li></ol><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>Here&#39;s a simple example of a background job that will be executed <code>periodically</code> or <code>specified time</code> based on the data that are stored in the database using below steps.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyFirstExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TickerController</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">TickerFunction</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FunctionName: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ExampleTicker</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ExampleTicker</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TickerFunctionContext</span><span style="color:#89DDFF;">&lt;string&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tickerContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">cancellationToken</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> tickerContext</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Value</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// output Hello</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="storing-jobs-in-database" tabindex="-1">Storing jobs in database <a class="header-anchor" href="#storing-jobs-in-database" aria-label="Permalink to &quot;Storing jobs in database&quot;">​</a></h2><h3 id="store-a-cronticker-periodic-job" tabindex="-1">Store a CronTicker <code>(periodic job)</code>. <a class="header-anchor" href="#store-a-cronticker-periodic-job" aria-label="Permalink to &quot;Store a CronTicker \`(periodic job)\`.&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">Steps:</p><ol><li>Retrive the <code>ICronTickerManager&lt;CronTicker&gt;</code> from DependencyInjection.</li></ol><blockquote><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ICronTickerManager</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">CronTicker</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_cronTickerManager</span><span style="color:#89DDFF;">;</span></span></code></pre></div></blockquote><ol start="2"><li>Store a <code>CronTicker</code> to the database:</li></ol><blockquote><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> _cronTickerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddAsync</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CronTicker</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   Request </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TickerHelper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateTickerRequest</span><span style="color:#89DDFF;">&lt;string&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">   Expression </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">* * * * *</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">   Function </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ExampleTicker</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote></div><h3 id="store-a-timeticker-time-based-job" tabindex="-1">Store a TimeTicker <code>(time based job)</code>. <a class="header-anchor" href="#store-a-timeticker-time-based-job" aria-label="Permalink to &quot;Store a TimeTicker \`(time based job)\`.&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><ol><li>Retrive the <code>ITimeTickerManager&lt;TimeTicker&gt;</code> from DependencyInjection.</li></ol><blockquote><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ITimeTickerManager</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TimeTicker</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_timeTickerManager</span><span style="color:#89DDFF;">;</span></span></code></pre></div></blockquote><ol start="2"><li>Store a <code>TimeTicker</code> to the database:</li></ol><blockquote><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> _timeTickerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddAsync</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TimeTicker</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   Request </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TickerHelper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateTickerRequest</span><span style="color:#89DDFF;">&lt;string&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">   ExecutionTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DateTime</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Now</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddMinutes</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">   Function </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ExampleTicker</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote></div>`,12),p=[o];function t(r,c,i,F,D,y){return a(),n("div",null,p)}const A=s(l,[["render",t]]);export{d as __pageData,A as default};
