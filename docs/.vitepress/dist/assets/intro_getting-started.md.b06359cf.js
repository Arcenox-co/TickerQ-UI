import{_ as s,o as a,c as e,X as n}from"./chunks/framework.6e839c56.js";const C=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"intro/getting-started.md","filePath":"intro/getting-started.md"}'),l={name:"intro/getting-started.md"},o=n(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><blockquote><p>You can install it with:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-aF5of" id="tab-7iZs2_E" checked="checked"><label for="tab-7iZs2_E">.NET CLI</label><input type="radio" name="group-aF5of" id="tab-4SUa3gx"><label for="tab-4SUa3gx">Package Manager</label><input type="radio" name="group-aF5of" id="tab-8lPOGzF"><label for="tab-8lPOGzF">Package Reference</label></div><div class="blocks"><div class="language-cli active"><button title="Copy Code" class="copy"></button><span class="lang">cli</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&gt; dotnet add package TickerQ</span></span></code></pre></div><div class="language-pm"><button title="Copy Code" class="copy"></button><span class="lang">pm</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PM&gt; NuGet\\Install-Package TickerQ</span></span></code></pre></div><div class="language-pm"><button title="Copy Code" class="copy"></button><span class="lang">pm</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;PackageReference Include=&quot;TickerQ&quot; Version=&quot;*&quot; /&gt;</span></span></code></pre></div></div></div></blockquote><div class="tip custom-block"><p class="custom-block-title">Note</p><p>TickerQ by default does not support time-based jobs and is not intended for use with load balancers. If you require these features, you can extend by adding TickerQ.EntityFrameworkCore package, which provides support for storing jobs in a database and is suitable for use with load balancers. Check it out on the <code>Next Page</code>.</p></div><h2 id="configure-services" tabindex="-1">Configure Services <a class="header-anchor" href="#configure-services" aria-label="Permalink to &quot;Configure Services&quot;">​</a></h2><p>Register TickerQ in <code>IServiceCollection</code></p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> TickerQ.DependencyInjection</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> TickerQ.EntityFrameworkCore.DependencyInjection</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">....</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTicker</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">opt</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Add other assemblies containing Ticker classes, if applicable.</span></span>
<span class="line"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetAssemblies</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">assemblies</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Set your class that implements ITickerExceptionHandler.  </span></span>
<span class="line"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetExceptionHandler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MyExceptionHandlerClass</span><span style="color:#89DDFF;">&gt;();</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Set the TimeZoneInfo for Ticker (default is TimeZoneInfo.Local).</span></span>
<span class="line"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetClockTimeZone</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">timeZoneInfo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Set the max thread concurrency for Ticker (default is Environment.ProcessorCount).</span></span>
<span class="line"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetMaxConcurrency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">maxConcurrency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><h2 id="configure-middleware" tabindex="-1">Configure Middleware <a class="header-anchor" href="#configure-middleware" aria-label="Permalink to &quot;Configure Middleware&quot;">​</a></h2><p>Use TickerQ using <code>IApplicationBuilder</code></p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> TickerQ.DependencyInjection</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UseTicker</span><span style="color:#89DDFF;">();</span></span></code></pre></div>`,10),t=[o];function p(c,r,i,d,y,F){return a(),e("div",null,t)}const u=s(l,[["render",p]]);export{C as __pageData,u as default};
