import{_ as s,o as a,c as n,X as e}from"./chunks/framework.6e839c56.js";const D=JSON.parse('{"title":"Handle Exceptions","description":"","frontmatter":{},"headers":[],"relativePath":"how-to/handle-exceptions.md","filePath":"how-to/handle-exceptions.md"}'),o={name:"how-to/handle-exceptions.md"},l=e(`<h1 id="handle-exceptions" tabindex="-1">Handle Exceptions <a class="header-anchor" href="#handle-exceptions" aria-label="Permalink to &quot;Handle Exceptions&quot;">​</a></h1><h2 id="create-your-own-exception-handler" tabindex="-1">Create your own <code>Exception Handler</code> <a class="header-anchor" href="#create-your-own-exception-handler" aria-label="Permalink to &quot;Create your own \`Exception Handler\`&quot;">​</a></h2><ol><li>Create a Public Instance Class</li><li>Implement the interface <code>ITickerExceptionHandler</code></li></ol><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TickerExceptionHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ITickerExceptionHandler</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HandleExceptionAsync</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">exception</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Guid</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tickerId</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TickerType</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tickerType</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Your Exception Handling logic...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Register your <code>Exception Handler</code></p><ul><li>After creating and implementing your <code>ExceptionHandler</code> class you should add it at <code>TickerQ</code> Config.</li></ul><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight has-focused-lines"><code><span class="line"><span style="color:#A6ACCD;">....</span></span>
<span class="line"><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTicker</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">opt</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line has-focus"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetExceptionHandler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TickerExceptionHandler</span><span style="color:#89DDFF;">&gt;();</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div></div>`,5),p=[l];function c(t,r,i,d,y,F){return a(),n("div",null,p)}const A=s(o,[["render",c]]);export{D as __pageData,A as default};
