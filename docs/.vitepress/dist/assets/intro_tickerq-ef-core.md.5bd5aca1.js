import{_ as a,o as s,c as e,X as n}from"./chunks/framework.6e839c56.js";const F=JSON.parse('{"title":"TickerQ EF Core","description":"","frontmatter":{},"headers":[],"relativePath":"intro/tickerq-ef-core.md","filePath":"intro/tickerq-ef-core.md"}'),o={name:"intro/tickerq-ef-core.md"},t=n(`<h1 id="tickerq-ef-core" tabindex="-1">TickerQ EF Core <a class="header-anchor" href="#tickerq-ef-core" aria-label="Permalink to &quot;TickerQ EF Core&quot;">​</a></h1><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>TickerQ.EntityFrameworkCore is a package that extends the functionality of TickerQ.</p><blockquote><p>You can install it with:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-4VgaT" id="tab-91H2dny" checked="checked"><label for="tab-91H2dny">.NET CLI</label><input type="radio" name="group-4VgaT" id="tab-zIJGUTQ"><label for="tab-zIJGUTQ">Package Manager</label><input type="radio" name="group-4VgaT" id="tab-T9wEdeC"><label for="tab-T9wEdeC">Package Reference</label></div><div class="blocks"><div class="language-cli active"><button title="Copy Code" class="copy"></button><span class="lang">cli</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&gt; dotnet add package TickerQ.EntityFrameworkCore</span></span></code></pre></div><div class="language-pm"><button title="Copy Code" class="copy"></button><span class="lang">pm</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PM&gt; NuGet\\Install-Package TickerQ.EntityFrameworkCore</span></span></code></pre></div><div class="language-pm"><button title="Copy Code" class="copy"></button><span class="lang">pm</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;PackageReference Include=&quot;TickerQ.EntityFrameworkCore&quot; Version=&quot;*&quot; /&gt;</span></span></code></pre></div></div></div></blockquote><h2 id="configure-options" tabindex="-1">Configure Options <a class="header-anchor" href="#configure-options" aria-label="Permalink to &quot;Configure Options&quot;">​</a></h2><p>Add options in TickerQ.</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight has-focused-lines"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> TickerQ.DependencyInjection</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> TickerQ.EntityFrameworkCore.DependencyInjection</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">....</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTicker</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">opt</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ....</span></span>
<span class="line has-focus"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Define the DbContext to use for storing Tickers. </span></span>
<span class="line has-focus"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddOperationalStore</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MyDbContext</span><span style="color:#89DDFF;">&gt;();</span><span style="color:#A6ACCD;"> </span></span>
<span class="line has-focus"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Set fallback time out to check for missed jobs and execute. </span></span>
<span class="line has-focus"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetTimeOutJobChecker</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">timeSpan</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line has-focus"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Set name of instance, default is Environment.MachineName. </span></span>
<span class="line has-focus"><span style="color:#A6ACCD;">  opt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetInstanceIdentifier</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">identifierName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><h2 id="add-migrations" tabindex="-1">Add Migrations <a class="header-anchor" href="#add-migrations" aria-label="Permalink to &quot;Add Migrations&quot;">​</a></h2><p>Migrations would be created for <code>Context</code> that is declared at <code>AddOperationalStore</code>.</p><div class="language-PM"><button title="Copy Code" class="copy"></button><span class="lang">PM</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PM&gt; add-migration &quot;InitialCreate&quot; -c MyDbContext</span></span></code></pre></div>`,10),l=[t];function p(c,i,r,d,y,C){return s(),e("div",null,l)}const u=a(o,[["render",p]]);export{F as __pageData,u as default};
